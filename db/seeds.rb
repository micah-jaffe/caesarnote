# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

julius = User.create!(username: 'Julius', email: 'julius@caesarnote.com', password: 'password')

##### Notebooks #####
Notebook.find_by_name('My First Notebook').destroy!

thinking = Notebook.create!(name: 'Thinking about thinking', user_id: julius.id, is_default: false, is_shortcut: false)
math = Notebook.create!(name: 'Math & CS', user_id: julius.id, is_default: false, is_shortcut: true)
misc = Notebook.create!(name: 'Miscellaneous', user_id: julius.id, is_default: true, is_shortcut: true)
musings = Notebook.create!(name: 'Musings', user_id: julius.id, is_default: false, is_shortcut: false)
untitled = Notebook.create!(name: 'Untitled', user_id: julius.id, is_default: false, is_shortcut: false)
funny = Notebook.create!(name: 'Funny things', user_id: julius.id, is_default: false, is_shortcut: false)

##### Notes #####
paul_graham = Note.create!(
  title: "Paul Graham on Writing",
  body: "<p><br></p><p><img src=\"http://ep.yimg.com/ay/paulgraham/write-like-you-talk-1.gif\" alt=\"Write Like You Talk\" height=\"18\" width=\"157\"></p><p><br></p><p>October 2015</p><p><br></p><p>Here's a simple trick for getting more people to read what you write: <strong style=\"background-color: rgb(102, 185, 102);\"><em>write in spoken language</em></strong><strong><em>.</em></strong></p><p><br></p><p><strong>Something comes over most people when they start writing</strong>. They write in a different language than they'd use if they were talking to a friend. The sentence structure and even the words are different. No one uses \"pen\" as a verb in spoken English. You'd feel like an idiot using \"pen\" instead of \"write\" in a conversation with a friend.</p><p><br></p><p>The last straw for me was a sentence I read a couple days ago:</p><p><br></p><blockquote><s>The mercurial Spaniard</s> himself declared: \"After Altamira, all is decadence.\"</blockquote><p><br></p><p>It's from Neil Oliver's&nbsp;<em>A History of Ancient Britain</em>. I feel bad making an example of this book, because it's no worse than lots of others. But just imagine calling Picasso \"the mercurial Spaniard\" when talking to a friend. <strong>Even one sentence of this would raise eyebrows in conversation</strong>. And yet people write whole books of it.</p><p><br></p><p>Ok, so written and spoken language are different. Does that make written language worse?</p><p><br></p><p>If you want people to read and understand what you write, yes. Written language is more complex, which makes it more work to read. It's also more formal and distant, which gives the reader's attention permission to drift. But perhaps worst of all, the complex sentences and fancy words give you, the writer, the false impression that you're saying more than you actually are.</p><p><br></p><p><strong style=\"background-color: rgb(102, 185, 102);\"><em>You don't need complex sentences to express complex ideas</em></strong>. When specialists in some abstruse topic talk to one another about ideas in their field, they don't use sentences any more complex than they do when talking about what to have for lunch. They use different words, certainly. But even those they use no more than necessary. And in my experience, the harder the subject, the more informally experts speak. Partly, I think, because they have less to prove, and partly because the harder the ideas you're talking about, the less you can afford to let language get in the way.</p><p><br></p><p>Informal language is the athletic clothing of ideas.</p><p><br></p><p>I'm not saying spoken language always works best. Poetry is as much music as text, so you can say things you wouldn't say in conversation. And there are a handful of writers who can get away with using fancy language in prose. And then of course there are cases where writers don't want to make it easy to understand what they're saying—in corporate announcements of bad news, for example, or at the more bogus end of the humanities. But for nearly everyone else, spoken language is better.</p><p><br></p><p><s>It seems to be hard for most people to write in spoken language. So perhaps the best solution is to write your first draft the way you usually would, then afterward look at each sentence and ask \"Is this the way I'd say this if I were talking to a friend?\" If it isn't, imagine what you would say, and use that instead. After a while this filter will start to operate as you write. When you write something you wouldn't say, you'll hear the clank as it hits the page.</s></p><p><br></p><p>Before I publish a new essay, I read it out loud and fix everything that doesn't sound like conversation. <u>I even fix bits that are phonetically awkward; I don't know if that's necessary, but it doesn't cost much.</u></p><p><br></p><p>This trick may not always be enough. I've seen writing so far removed from spoken language that it couldn't be fixed sentence by sentence. For cases like that there's a more drastic solution. After writing the first draft, try explaining to a friend what you just wrote. Then replace the draft with what you said to your friend.</p><p><br></p><p>People often tell me how much my essays sound like me talking. The fact that this seems worthy of comment shows how rarely people manage to write in spoken language. Otherwise everyone's writing would sound like them talking.</p><p><br></p><p>If you simply manage to write in spoken language, you'll be ahead of 95% of writers. And it's so easy to do: <strong style=\"background-color: rgb(102, 185, 102);\"><em>just don't let a sentence through unless it's the way you'd say it to a friend.</em></strong></p>",
  notebook_id: thinking.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

asinine = Note.create!(
  title: "Tim Urban on Society",
  body: "<h1><strong>7 Asinine Things About Society</strong></h1><p><span style=\"background-color: initial;\">August 26, 2013\t</span>By Tim Urban</p><p><br></p><p><br></p><p><strong>1) Absurdly Difficult Word Verification Graphics</strong></p><p><img src=\"http://4.bp.blogspot.com/-jvVJtAsFegY/UhvYMaSyo5I/AAAAAAAAFFo/LnPQlJOQB8c/s400/word+verification.jpg\" height=\"266\" width=\"400\"></p><p><br></p><p>There’s just no need for this to exceed a certain level of difficulty. Spam robots aren’t that good. There are plenty of easy word verifications out there, so we know they don’t need to be impossible.</p><p><br></p><p><strong>2) Waiters Reciting Specials Out Loud</strong></p><p><br></p><p><a href=\"http://1.bp.blogspot.com/-rJQLr-h1aII/UhvYL1EsmVI/AAAAAAAAFFs/dhG4WfSThHg/s1600/waiter+recite+2.jpg\" target=\"_blank\" style=\"background-color: initial; color: rgb(77, 150, 198);\"><img src=\"http://1.bp.blogspot.com/-rJQLr-h1aII/UhvYL1EsmVI/AAAAAAAAFFs/dhG4WfSThHg/s640/waiter+recite+2.jpg\" height=\"610\" width=\"640\"></a></p><p><span style=\"color: rgb(51, 51, 51);\">This is one of those situations, like wine bottles continuing to use corks instead of twist tops, where progress has ground to a halt because there’s a fear of being perceived as tacky if an idiotic system is improved upon. Everyone would be happier if specials (and their prices) were printed on a sheet of paper: Customers could actually examine the specials and decide intelligently about them, waiters wouldn’t have to memorize 800-word descriptions each night, and the restaurant would end up selling more specials (which are usually on the pricier side).</span></p><p><br></p><p><strong>3) Sinks with two faucets</strong></p><p><br></p><p><a href=\"http://2.bp.blogspot.com/-jaJFaPwWvZw/Uhvb-Vj7xPI/AAAAAAAAFF0/onTzy2ymWnk/s1600/faucets.jpg\" target=\"_blank\" style=\"background-color: initial; color: rgb(77, 150, 198);\"><img src=\"http://2.bp.blogspot.com/-jaJFaPwWvZw/Uhvb-Vj7xPI/AAAAAAAAFF0/onTzy2ymWnk/s640/faucets.jpg\" height=\"458\" width=\"640\"></a></p><p>This is probably an old faucet thing. But I’m not sure why it would have ever been a thing at all. It’s not complicated technology to combine two pipes into one and make the sink usable.</p>",
  notebook_id: musings.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

nyt = Note.create!(
  title: "NYT Year in Review",
  body: "<h1>What We Learned in 2018: Science</h1><p>Developments in science that we’re still thinking about at year’s end.</p><p><br></p><h2 class=\"ql-align-center\"><a href=\"https://www.nytimes.com/2018/12/05/health/crispr-gene-editing-embryos.html\" target=\"_blank\" style=\"color: rgb(50, 104, 145);\" class=\"ql-size-large\">The dangers of gene editing</a></h2><p><span class=\"ql-size-large\">A scientist’s use of the Crispr technique set off a global firestorm.</span></p><p><br></p><p><img src=\"https://static01.nyt.com/images/2018/12/13/science/00whatwelearned-science2/00whatwelearned-science2-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale\"></p><p>He Jiankui speaking before the Second International Summit on Human Genome Editing in Hong Kong last month.</p><p><br></p><p>He Jiankui’s claim that he&nbsp;had secretly altered the embryos of twin girls in China&nbsp;shocked scientists around the world. If his claims are true, the babies would be the first known embryo-edited children, and many people fear a day when it will be&nbsp;possible to edit genes for traits like intelligence, beauty or athletic ability. For now, scientists fear that the twins could face health risks from unintended consequences of the gene editing. The reaction to Dr. He’s work could also imperil ongoing research that is being conducted with more consideration for medical ethics and safety.</p><p><br></p><p><br></p><h2 class=\"ql-align-center\"><a href=\"https://www.nytimes.com/2018/06/05/science/how-the-ice-age-shaped-new-york.html\" target=\"_blank\" style=\"color: rgb(50, 104, 145);\" class=\"ql-size-large\">New York’s glacial history</a></h2><p><span class=\"ql-size-large\">We learned amazing natural wonders sometimes hide in plain sight.</span></p><p><br></p><p><img src=\"https://static01.nyt.com/images/2018/12/13/science/00WHATWELEARNED-science1/merlin_137977761_a11370aa-82f4-4988-9a60-f9407ece9054-articleLarge.jpg?quality=75&amp;auto=webp&amp;disable=upscale\"></p><p>Massive grooves carved by glacial ice and rubble during the last Ice Age on Umpire Rock in Central Park.</p><p><br></p><p>What we now call New York City once marked the spot where&nbsp;a massive ice sheet reached its end point. Over millions of years, it shaped the area’s landscape in unique ways. From Manhattan’s skyscrapers,&nbsp;you can see the Ice Age on a clear day, as a Times headline writer put it.</p><h2 class=\"ql-align-center\"><br></h2><h2 class=\"ql-align-center\"><br></h2>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

chaos = Note.create!(
  title: "Chaos Theory",
  body: "<h1><strong>The stunning beauty of Chaos theory</strong></h1><h2><span class=\"ql-size-small\">Have you ever wondered what chaos theory is? If you give me a few minutes of your time, I will explain you the basics of one of my favorite fields in theoretical physics and what this beautiful title picture shows, only addition and multiplication required. Be ready to be&nbsp;amazed.</span></h2><p><br></p><p><span style=\"color: rgb(51, 51, 51);\"><img src=\"https://cdn-images-1.medium.com/max/2000/1*HCmSJVn5MqBs5401kgUSlg.png\"></span></p><p><br></p><p>In the early 60’s MIT professor Edward Lorenz worked on predicting the weather using the university’s new mainframe computers. He derived a simple set of equations that describe the convection of air and wrote a computer program to solve them. What he discovered next blew his mind: there was no randomness involved in the equations (deterministic system), yet he could run the computer program twice with the exact same parameters and get completely different results. Deterministic chaos was discovered.</p><p><br></p><blockquote><em>In mathematics, computer science and physics, a&nbsp;</em><strong><em>deterministic system</em></strong><em>&nbsp;is a system in which no randomness is involved in the development of future states of the system. A deterministic model will thus always produce the same output from a given starting condition or initial state.</em></blockquote>",
  notebook_id: math.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

wiles = Note.create!(
  title: "Andrew Wiles Advice",
  body: "<h1>The State of Being Stuck</h1><p>By <span style=\"background-color: transparent;\">Ben Orlin</span></p><p><br></p><p>Last year, I got the high school math teacher’s version of a wish on a magic lamp: a chance to ask a question of the world’s most famous mathematician.</p><p><img src=\"https://mathwithbaddrawings.files.wordpress.com/2017/09/20161031143242_000261.jpg?w=1100\" alt=\"20161031143242_00026\"></p><p>Andrew Wiles gained his fame by solving a nearly 400-year-old problem: Fermat’s Last Theorem. The same puzzle had captivated Wiles as a child and inspired him to pursue mathematics. His solution touched off a mathematical craze in a culture where “mathematical craze” is an oxymoron. Wiles found himself the subject of books, radio programs, TV documentaries—the biggest mathematical celebrity of the last half-century.</p><p><br></p><p>And so, having lucked into attending a press conference at the Heidelberg Laureate Forum in Germany, where Wiles was an honored guest, I asked him:</p><p><img src=\"https://mathwithbaddrawings.files.wordpress.com/2017/09/20161031143242_000271.jpg?w=1100\" alt=\"20161031143242_00027\"></p><p>The essence of Wiles’ answer can be boiled down to just six words: “Accepting the state of being stuck.”</p><p><br></p><p>For Wiles, this is more than just a vague moral, an offhand suggestion. It’s the essence of his work. It’s an experience at once excruciating, joyful, and utterly unavoidable. And it’s something desperately misunderstood by the public.</p><p><br></p><p class=\"ql-align-center\">***</p>",
  notebook_id: thinking.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

naval = Note.create!(
  title: "Naval Ravikant on Team Building",
  body: "<h1><strong>Build a Team that Ships</strong></h1><p><br></p><p>I started my first company 15 years go, and I still can’t manage. I suspect that very few people can. With AngelList, we want a team of self-managing people who ship code.</p><p><br></p><p><em>Here’s what we do:</em></p><ul><li><span style=\"background-color: rgb(204, 232, 204);\">Keep the team small.</span> All doers, no talkers. Absolutely no middle managers. All BD via APIs.</li><li>Outsource everything that isn’t core. Resist the urge to pick up that last dollar. Founders do Customer Service.</li><li>People choose what to work on. <span style=\"background-color: rgb(204, 232, 204);\">Better they ship what they want than not ship what you want.</span></li><li>No tasks longer than one week. You have to ship something into live production every week – worst case, two weeks. If you just joined, ship something.</li><li>Peer-management. Promise what you’ll do in the coming week on internal Yammer. Deliver – or publicly break your promise – next week.</li><li><span style=\"background-color: rgb(204, 232, 204);\">One person per project.</span> Get help from others, but you and you alone are accountable.</li></ul><p><br></p><p>If they can’t ship, release them. Our environment is wrong for them. They should go find someplace where they can thrive. There’s someplace for everyone.</p><p><br></p><p>It’s not perfect. We ship too many features, many half-baked. The product is complex, with many blind alleys. It’s hard to integrate non-engineers – they aren’t valued.</p><p><br></p><p><strong><em>But, we ship.</em></strong></p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

dual_processing = Note.create!(
  title: "Conceptually: Dual Processing Theory",
  body: "<h1><strong>Week 4: Dual Processing Theory</strong></h1><p><img src=\"https://gallery.mailchimp.com/688c15941fef08d71d38745d7/images/3812ab06-bd35-44b1-953d-f531d7162732.jpg\" width=\"500\"></p><p>When we’re making decisions, we use two different systems of thinking. System 1 is our intuition or gut-feeling: fast, automatic, emotional, and subconscious. System 2 is slower and more deliberate: consciously working through different considerations, applying different concepts and models and weighing them all up.</p><p><br></p><p>A lot of people have popularised the idea to trust your intuition, but surely there are situations where we shouldn’t trust it, right? So we should instead be asking not whether to trust it, but when to. One takeaway from the psychological research on dual process theory is that our System 1 (intuition) is more accurate in areas where we’ve gathered a lot of data with reliable and fast feedback, like social dynamics. You know if you insult someone, they’ll probably react by getting sad or defensive. That’s because our intuition has been 'trained' by repeatedly witnessing occurrences and receiving fast feedback on the consequences. Whereas our System 2 tends to be better for decisions where we don’t have a lot of experience; involving numbers, statistics, logic, abstractions, or models; and phenomena our ancestors never dealt with. <span style=\"background-color: rgb(255, 255, 0);\">Pro tip: You can also use both systems,</span> acknowledging that you have an intuition, and feeding it into your System 2 model.</p><p><br></p><h2><strong>Examples of using dual process theory</strong></h2><p><br></p><p>This applies to so many facets of life, but let’s take one decision everyone has to make at some point: choosing a career. The decision can be broken down into parts, some are more appropriate for System 1 reasoning, and some are appropriate for using your System 2. With your system 1 you might tackle questions like, “Will I get on with the people I’d be working with in this job?”, or “Will this working environment help me to work productively?”.</p><p><br></p><p>And certain questions seem best analysed with System 2: “Where will I build the most valuable skills?”, “What factors correlate most with job satisfaction?”, “Which organisation is growing the fastest?” <span style=\"background-color: rgb(255, 255, 0);\">System 2 reasoning is also better for weighing all the relevant factors and eventually making your</span><span style=\"color: rgb(43, 170, 223); background-color: rgb(255, 255, 0);\">&nbsp;</span><span style=\"background-color: rgb(255, 255, 0);\">career decision</span>&nbsp;because in order to get enough data to have reliable feedback, you would need to have had experience making hundreds or thousands of these decisions.</p><p><br></p><p>We also use these 2 processes for making decisions about what is moral or ethical behaviour, what Jonathan Haidt, who conducted much of the original research, has called social intuitionism. He found that moral judgements are made predominantly on the basis of intuition and, when prompted, we use our System 2 to provide a rationalisation, and only rarely do people use conscious reasoning beforehand. Psychologist&nbsp;Paul Bloom argues this is harmful&nbsp;because we can be easily corrupted by immoral social norms (and this is how atrocities like slavery were justified).</p>",
  notebook_id: thinking.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

feynman = Note.create!(
  title: "The Feynman Technique",
  body: "<h1 class=\"ql-align-center\"><strong>The Feynman Technique: The Best Way to Learn Anything</strong></h1><p class=\"ql-align-center\"><span style=\"color: rgb(178, 177, 177);\">READING TIME: 3 MINUTES</span></p><p><br></p><p>There are four simple steps to&nbsp;<strong>the Feynman Technique</strong>, which I’ll explain below:</p><ol><li><em>Choose a Concept</em></li><li><em>Teach it to a Toddler</em></li><li><em>Identify Gaps and Go Back to The Source Material</em></li><li><em>Review and&nbsp;Simplify (optional)</em></li></ol><p class=\"ql-align-center\">***</p><p><br></p><p>If you’re not learning you’re standing still. So what’s the best way to learn new subjects and identify gaps in our existing knowledge?</p><h2><br></h2><h2><strong>Two Types of Knowledge</strong></h2><p>There are&nbsp;<span style=\"color: rgb(204, 50, 50); background-color: transparent;\">two types of knowledge</span>&nbsp;and most of us focus on the wrong one. The first type of knowledge focuses&nbsp;on knowing the name of something. The second focuses on knowing something. These are not the same thing. The famous Nobel winning physicist&nbsp;<strong style=\"background-color: transparent; color: rgb(204, 50, 50);\">Richard Feynman </strong>understood&nbsp;<span style=\"background-color: transparent; color: rgb(204, 50, 50);\">the difference between knowing something and knowing the name of something</span>&nbsp;and it’s one of the most important reasons for his success. In fact, he created&nbsp;<strong>a formula for learning</strong>&nbsp;that ensured he understood something better than everyone else.</p><p>It’s called the Feynman Technique and it will help you learn anything faster and with greater understanding. Best of all, it’s incredibly easy to implement.</p><p><br></p><blockquote>“The person who says he knows what he thinks but cannot express it usually does not know what he thinks.” <em>— Mortimer Adler</em></blockquote><p><br></p><p><strong>Step 1: Teach it to a child﻿</strong></p><p>Take out a blank sheet of paper and write the subject you want to learn at the top. Write out what you know about the subject as if you were teaching it to a child. Not your smart adult friend but rather an 8-year-old who has just enough vocabulary and attention span to understand basic concepts and relationships.</p><p><br></p><p>A lot of people tend to use complicated vocabulary and jargon to mask when they don’t understand something. The problem is we only fool ourselves because we don’t know that we don’t understand. In addition, using jargon conceals our misunderstanding from those around us.</p><p><br></p><p><span style=\"background-color: rgb(255, 255, 0);\">When you write out an idea from start to finish in simple language that a child can understand (tip: use only the most common words), you force yourself to understand the concept at a deeper level and simplify relationships and connections between ideas.</span> If you struggle, you have a clear understanding of where you have some gaps. That tension is good – it heralds an opportunity to learn.</p><p><br></p><p><strong>Step 2: Review</strong></p><p>In step one, you will inevitably encounter gaps in your knowledge where you’re forgetting something important, are not able to explain it, or simply have trouble connecting an important concept.</p><p><br></p><p>This is invaluable feedback because you’ve discovered the edge of your knowledge. Competence is knowing the limit of your abilities, and you’ve just identified one! This is where the learning starts. Now you know where you got stuck, go back to the source material and re-learn it until you can explain it in basic terms. Identifying the boundaries of your understanding also limits the mistakes you’re liable to make and increases your chance of success when applying knowledge.</p><p><br></p><p><strong>Step 3: Organize and Simplify</strong></p><p>Now you have a set of hand-crafted notes. Review them to make sure you didn’t mistakenly borrow any of the jargon from the source material. Organize them into a simple story that flows.</p><p><br></p><p>Read them out loud. If the explanation isn’t simple or sounds confusing that’s a good indication that your understanding in that area still needs some work.</p><p><br></p><p><strong>Step 4 (optional): Transmit</strong></p><p>If you really want to be sure of your understanding, run it past someone (ideally who knows little of the subject –or find that 8-year-old!). <span style=\"background-color: rgb(255, 255, 0);\">The ultimate test of your knowledge is your capacity to convey it to another.</span></p><p class=\"ql-align-center\">***</p>",
  notebook_id: thinking.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

bobby_tables = Note.create!(
  title: "Little Bobby Tables",
  body: "<p class=\"ql-align-center\"><img src=\"https://imgs.xkcd.com/comics/exploits_of_a_mom.png\" alt=\"Exploits of a Mom\"></p>",
  notebook_id: math.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

basecamp = Note.create!(
  title: "Basecamp Team Structure",
  body: "<h1><strong>How we structure our work and teams at Basecamp</strong></h1><h2>An inside look at the specifics of how we decide what to do and then decide how to do&nbsp;it.</h2><p><br></p><p><a href=\"https://m.signalvnoise.com/@jasonfried?source=post_header_lockup\" target=\"_blank\" style=\"color: inherit; background-color: transparent;\"><img src=\"https://cdn-images-1.medium.com/fit/c/50/50/0*iogT6QBu33BhVdzo.png\" alt=\"Go to the profile of Jason Fried\"></a></p><p><a href=\"https://m.signalvnoise.com/@jasonfried?source=post_header_lockup\" target=\"_blank\" style=\"color: rgba(0, 0, 0, 0.84); background-color: transparent;\">Jason Fried</a>Nov 17, 2016</p><p><br></p><p>“How do you guys&nbsp;<em>actually</em>&nbsp;work? How do you choose what to do? How big are your teams? How do you structure the work itself” are questions I get all the time. I’ve been sharing the details in small group workshops and 1 on 1, but figured it was time to write something up so we can share it at large.</p><p><br></p><p>We landed on this process after a decade of refinement. <span style=\"background-color: rgb(255, 255, 0);\">Just like we’re always iterating on our product work, we’re also always iterating on how our company works.</span> We consider our company a product too. When you begin to think of your company like a product, you can begin to improve it in entirely new ways. I feel like we’re on version 5.2 of “how we work”.</p><p><br></p><p>Let’s get into it:</p><p><br></p><h4><strong class=\"ql-size-large\">We work in six week&nbsp;cycles</strong></h4><p><br></p><p>Roughly every six weeks we start a new cycle of product work. Each six week work cycle contains two type of projects:</p><p><br></p><ul><li><strong>Big Batch</strong>: Big Batch projects are big features or stuff that’s probably going to take up the full six weeks to get done. We typically take on one or two Big Batch projects in a six week cycle.</li><li><strong>Small Batch:</strong>&nbsp;Small Batch projects are smaller things, tweaks, minor adjustments, and easy adds that should take anywhere from a day to two weeks to complete. We typically take on between 4 and 8 Small Batch projects in a six week cycle.</li></ul><p><br></p><p>To give you a sense of what kind of projects might fit into Big and Small,&nbsp;<span style=\"background-color: transparent; color: inherit;\">here’s an actual internal post announcing a cycle’s worth of work.</span></p><p><br></p><p>Once a six week cycle is over, we take one or two weeks off of&nbsp;<em>scheduled projects</em>&nbsp;so everyone can roam independently, fix stuff up, pick up some pet projects we’ve wanted to do, and generally wind down prior to starting the next six week cycle. Ample time for context switching. We also use this time to firm up ideas that we’ll be tackling next cycle. More on this in a bit.</p><p><br></p><p>Note: These are not sprints. I despise the word sprints. Sprints and work don’t go together. <span style=\"background-color: rgb(255, 255, 0);\">This isn’t about running all out as fast as you can, it’s about working calmly, at a nice pace, and making smart calls along the way</span>. No brute force here, no catching our collective breath at the end.</p><p><br></p><h4><strong class=\"ql-size-large\">Six weeks… What if something’s so huge it’s going to take&nbsp;longer?</strong></h4><p><br></p><p>We believe there’s a great six week version of nearly everything. Occasionally some things fall outside of this limit — deep R&amp;D projects, brand new tech we’ve never used before, etc. But we’ve come to discover that nearly everything important can be done in six weeks or less. And done well.</p><p><br></p><p>The secret to making this possible is something we call scope hammering. We take the chisel to the big block of marble and figuring out how to sculpt, nip, and tuck a feature into the best six-week version possible. It’s all about looking carefully at a feature and figuring out the true essence. Not what can it be, but what does it need to be?</p><p><br></p><p>Before any project is included in a cycle, we’ve already figured out what we think the six week version is. We don’t include planning in the cycle time — all the planning and consideration happens in the pitch. It has to happen before the work is slated to be done by a team. That way the six weeks is all implementation and execution. <span style=\"background-color: rgb(255, 255, 0);\">No time is spent on big unknowns — we try to make sure all the big stuff is known enough before we get started.</span></p><p><br></p><h4><strong class=\"ql-size-large\">Who does the&nbsp;work?</strong></h4><p><br></p><p>Each Big Batch project is assigned a team. So if we take on two Big Batch projects during a cycle, we’d have one team working on one of the projects and another team working on the other project. Small Batch projects are all done by one team. Teams stay together for the full cycle.</p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

ggg = Note.create!(
  title: "Guns, Germs, and Steel Synopsis",
  body: "<h2><span style=\"color: rgb(161, 0, 0);\">At a Glance</span></h2><p><br></p><p>In<em> Guns, Germs, and Steel, </em>anthropologist Jared Diamond explains why some societies are more materially successful than others. He attributes societal success to geography, immunity to germs,&nbsp;food production, the domestication of animals, and use of steel.</p><p><br></p><p><em>Guns, Germs, and Steel</em>&nbsp;summary key points:</p><ul><li>Farming and domesticating animals provide social stability that is lacking in hunter-gatherer societies. Labor specialization enables certain groups to develop weapons.</li><li>Major portions of Eurasia had a natural advantage in developing agriculture and domesticating animals because of geography and the presence of plants and animals that could be easily domesticated.</li><li>The landmass of Eurasia, laid out on an east-west axis, allowed for the sharing of crops, animals, and ideas. The Americas, stretched out on a north-south axis, traverse various climate zones and geographic boundaries that discourage trade.</li><li>The diversity and density of Eurasian populations created an immunity to germs that would later wipe out the more isolated populations of the Americas.</li></ul>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

eightyhours = Note.create!(
  title: "80000 Hours SWE Profile",
  body: "<h1><strong>New in-depth profile on software engineering</strong></h1><p><br></p><p><span style=\"background-color: transparent;\">By </span><u style=\"background-color: transparent; color: rgb(221, 221, 221);\">Roman Duda </u></p><p>Published June 11th, 2015</p><p><br></p><p><strong style=\"color: rgb(0, 102, 204);\">Our recommendation in the profile:</strong></p><blockquote>Software engineering at large tech-firms is a highly promising option that’s especially easy to test out. If you have good analytical skills (even if you are from a humanities background), you should strongly considering testing it.</blockquote><p><br></p><p><strong>Pros</strong>:</p><blockquote>You gain a great set of skills that are in short supply, which gives you <span style=\"color: rgb(0, 102, 204);\">great bargaining power and opens up a wide range of options,</span> including founding or joining early-stage startups, continuing in large tech-firms, data science, quantitative finance, research and remote freelance work.</blockquote><p><br></p><blockquote>Excellent working conditions, with flexible hours that are shorter than in many corporate jobs and ability to work remotely.</blockquote><p><br></p><blockquote>In the US, the pay is relatively high, especially early on in your career (many can start on $100,000), making it a <span style=\"color: rgb(0, 102, 204);\">good option for earning to give</span>.</blockquote><p><br></p><p><strong>Cons:</strong></p><blockquote>Mid and late stage earnings lower than in many other professional jobs.</blockquote><p><br></p><blockquote>Less opportunity to develop non-technical soft skills.</blockquote><p><br></p><p><strong>Topics explored in the full report include:</strong></p><ul><li>How to test out your fit for software engineering.</li><li>Using software engineering to pursue high-impact projects on the side.</li><li>A comparison of US and UK earnings – we found that average salaries are 40% higher in the US than in the UK, 80% higher in Silicon Valley than in London, and starting salaries for bootcamp graduates are around twice as high in Silicon Valley as in London.</li><li>What software engineering is like day to day and the key stages of progression.</li></ul>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

bayes = Note.create!(
  title: "Bayes' Rule",
  body:  "<h1><strong style=\"color: rgb(51, 51, 51);\">Week 18: Bayes’ Rule</strong></h1><p><img src=\"https://gallery.mailchimp.com/688c15941fef08d71d38745d7/images/4caec866-b5be-477d-baea-85d9e353e586.png\" width=\"500\"></p><p><br></p><p>Bayes’ rule is a method for assessing the probabilities of an event. You start with a probability before an event, receive evidence, and update the probability you originally assigned.</p><p><br></p><p>Philip Tetlock found that \"superforecasters\", people who were especially good at predicting future events, use Bayes’ rule extensively:</p><p><br></p><blockquote><em>The superforecasters are a numerate bunch: many know about Bayes' theorem and could deploy it if they felt it was worth the trouble. But they rarely crunch the numbers so explicitly. What matters far more to the superforecasters than Bayes' theorem is Bayes' core insight of gradually getting closer to the truth by constantly updating in proportion to the weight of the evidence. </em>—&nbsp;Superforecasting,&nbsp;Philip Tetlock and Dan Gardner</blockquote><p><br></p><p>This takes a while to explain and get, but it’s worthwhile taking the time.&nbsp;Arbital does a good job of explaining and applying it. You should head over there and read it.</p><p><a href=\"https://conceptually.us14.list-manage.com/track/click?u=688c15941fef08d71d38745d7&amp;id=d87fb01577&amp;e=dd9f3431db\" target=\"_blank\" style=\"color: rgb(255, 255, 255);\"><strong>GO TO ARBITAL</strong></a></p><h2><strong>Examples of Bayes’ rule</strong></h2><p><br></p><p>Bayes’ rule is useful in several ways, but one is that it forces us to&nbsp;think probabilistically. It allows us to account for competing evidence of different strengths (in how big our ‘update’ is) and promotes a nuanced view, thus avoiding a simplistic black and white application of ‘good and bad’ outcomes.</p><p><br></p><p>It forces us to account for the base rate, and to take an appropriate&nbsp;outside view. If the prior probability of cancer is low, even relatively strong evidence might not make the posterior probability of someone actually having cancer very high.</p><p><br></p><p>Your friend comes to you claiming they’ve got a miracle cure for what ails you. The prior probability you assign to this being true should be very low (the base rate for successful medical interventions is at most one in tens of thousands), so you’d need to get very strong evidence of efficacy.</p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: true,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

buffett = Note.create!(
  title: "The Buffett Formula",
  body: "<h1 class=\"ql-align-center\"><strong>The Buffett Formula: Going to Bed Smarter Than you Woke Up</strong></h1><p class=\"ql-align-center\"><span style=\"color: rgb(178, 177, 177);\">READING TIME: 5 MINUTES</span></p><p class=\"ql-align-center\"><img src=\"https://www.farnamstreetblog.com/wp-content/uploads/2013/01/Warren-Buffett.jpeg\" alt=\"The Buffett Formula\" height=\"326\" width=\"640\"></p><p class=\"ql-align-center\"><br></p><p>Most people go through life not really getting any smarter. Why? They simply won’t do the work required. <span style=\"background-color: rgb(255, 255, 0);\">It’s easy to come home, sit on the couch, watch TV, and zone out until bedtime rolls around. But that’s not going to help you get smarter</span>. Sure, you can go into the office the next day and discuss the details of last night’s episode of&nbsp;<em>Mad Men</em>&nbsp;or&nbsp;<em>Game of Thrones</em>. And yes, you know what happened on&nbsp;<em>Survivor</em>. But that’s not knowledge accumulation; that’s a mind-numbing sedative.</p><p><br></p><p>You can acquire knowledge if you want it.&nbsp;In fact, there is a simple formula, which if followed is almost certain to make you smarter over time.&nbsp;<strong>Simple but not easy.</strong></p><p>It involves a lot of hard work.</p><p><br></p><blockquote>“The best thing a human being can do is to help another human being know more.”<em>— Charlie Munger</em></blockquote><p><br></p><p>We’ll call it the&nbsp;<strong>Buffett formula</strong>, named after&nbsp;<strong>Warren Buffett</strong>&nbsp;and his longtime business partner at Berkshire Hathaway,&nbsp;<strong>Charlie Munger</strong>. These two are an extraordinary combination of minds. They are also&nbsp;<span style=\"background-color: transparent; color: rgb(204, 50, 50);\">learning machines</span>.</p><p><br></p><blockquote><em>“I can see, he can hear. We make a great combination.”&nbsp;</em>—Warren Buffett, speaking of his partner and friend, Charlie Munger.</blockquote><p><br></p><p>We can learn a lot from them. They didn’t get smart because they are both billionaires. They became billionaires, in part, because they are smart. <span style=\"background-color: rgb(255, 255, 0);\">More importantly, they keep getting smarter.</span> And it turns out that they have a lot to say on the subject.</p><p><br></p><h2><strong>How to Get Smarter</strong></h2><p><br></p><p>Read. A lot.</p><p><br></p><p>Warren Buffett says,<span style=\"background-color: rgb(255, 255, 0);\"> “I just sit in my office and read all day.”</span> What does that mean? He estimates that he spends 80% of his working day reading and thinking.“You could hardly find a partnership in which two people settle on reading more hours of the day than in ours,” Charlie Munger commented. When asked how to get smarter, Buffett once held up stacks of paper and said, “Read 500 pages like this every week. That’s how knowledge builds up, like compound interest.” All of us can build our knowledge, but most of us won’t put in the effort.</p><p><br></p><blockquote>“Go to bed smarter than when you woke up.”<em>— Charlie Munger</em></blockquote><p><br></p><p>One person who took Buffett’s advice, Todd Combs, now works for the legendary investor. After hearing Buffett talk, he started keeping track of what he read and how many pages he was reading.</p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

friendships = Note.create!(
  title: "WBW: Friendships",
  body:"<h1><strong>10 Types of Odd Friendships You’re Probably Part Of</strong></h1><p><span style=\"background-color: initial;\">December 8, 2014\t</span>By Tim Urban</p><p><br></p><p><em style=\"background-color: initial;\">A note about listicles: So we know a lot of people hate listicles and associate them with cheap, low-quality, traffic-driving, link-bait articles. But here’s the thing—a list is a great format for an article, and a format I was using on my old blog almost 10 years ago.</em></p><p class=\"ql-align-center\">__________</p><p class=\"ql-align-center\"><br></p><p>When you’re a kid, or in high school, or in college, you don’t really work too hard on your friend situation. <strong><em>Friends just kind of happen.</em></strong></p><p><br></p><p>For a bunch of years, you’re in a certain life your parents chose for you, and so are other people, and none of you have that much on your plates, so friendships inevitably form.</p><p><br></p><p>Once student life ends, the people in your life start to shake themselves into more distinct tiers. Something like this:</p><p><br></p><p><a href=\"https://28oa9i1t08037ue3m1l0i861-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/Mountain1.jpg\" target=\"_blank\" style=\"color: rgb(77, 150, 198); background-color: initial;\"><img src=\"https://28oa9i1t08037ue3m1l0i861-wpengine.netdna-ssl.com/wp-content/uploads/2014/12/Mountain1.jpg\" alt=\"Mountain\" height=\"575\" width=\"750\"></a></p><p><br></p><p>At the top of your life mountain, in the green zone, you have your&nbsp;<strong style=\"background-color: initial;\">Tier 1 friends</strong>—those who feel like brothers and sisters. These are the people closest to you, those you call first when something important happens, those you love even when they suck, who make speeches at your wedding, whose best and worst sides you know through and through, and whose relationship with you is eternal—even if you go months or years without hanging out, nothing has changed when you find yourself together again. Unfortunately, depending on how things went down in your youth, Tier 1 can also contain your worst enemies, the people who can ruin your day with one subtle jab that only&nbsp;<em style=\"background-color: initial;\">they</em>&nbsp;could word so brilliantly hurtfully, the people you feel a burning resentment for, or jealousy of, or competition with. Tier 1 is high stakes.</p><p><br></p><p>Below, in the yellow zone, are your&nbsp;<strong style=\"background-color: initial;\">Tier 2 friends</strong>—your Pretty Good friends. Pretty Good friends are a much calmer situation than your brothers and sisters on Tier 1. You might be invited to their wedding, but you won’t have any responsibilities once you’re there. If you live in the same city, you might see them every month or two for dinner and have a great time when you do, but if one of you moves, you might not speak for the next year or two. And if something huge happens in their life, there’s a good chance you’ll hear it first from someone else.</p><p><br></p><p>Towards the bottom of the mountain in the orange zone, you have your&nbsp;<strong style=\"background-color: initial;\">Tier 3 friends</strong>—your Not Really friends. You might grab a one-on-one drink with one of them when you move to their city, but then it surprises neither of you when five years pass and drink #2 is still yet to happen. Your relationship tends to exist mostly as part of a bigger group or through the occasional Facebook like, and it doesn’t even really stress you out when you hear that one of them made $5 million last year. You may also try to sleep with one of these people at any given time.</p><p><br></p><p>The lowest part of Tier 3 begins to blend indistinguishably into your large group of&nbsp;<strong style=\"background-color: initial;\">acquaintances</strong>&nbsp;(the pink zone)—those people you’d stop and talk to if you saw them on the street or would maybe email for professional purposes, but whom you’d never hang out with one-on-one. When you hear that something bad happens to one of these people, you pretend to be sad but you don’t actually care.</p><p><br></p><p>Finally, acquaintances gradually blend into the endless world of strangers. And depending on who you are and how things shook out in those first 25 years, the way your particular mountain looks will vary.</p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

linear_odes = Note.create!(
  title: "Linear ODEs",
  body: "<p>A first‐order differential equation is said to be <strong>linear</strong> if it can be expressed in the form:</p><p><br></p><p>&nbsp;&nbsp;<img src=\"https://www.cliffsnotes.com/assets/19076.jpg\">&nbsp;</p><p><br></p><p>where&nbsp;<em>P</em>&nbsp;and&nbsp;<em>Q</em>&nbsp;are functions of&nbsp;<em>x</em>. The method for solving such equations is similar to the one used to solve nonexact equations. There, the nonexact equation was multiplied by an integrating factor, which then made it easy to solve (because the equation became exact). To solve a first‐order linear equation, first rewrite it (if necessary) in the standard form above; then multiply both sides by the&nbsp;<strong>integrating factor</strong></p><p><br></p><p><img src=\"https://www.cliffsnotes.com/assets/19077.jpg\"></p><p><br></p><p>The resulting equation,&nbsp;</p><p><br></p><p><img src=\"https://www.cliffsnotes.com/assets/19078.jpg\">&nbsp;</p><p><br></p><p>is then easy to solve, not because it's exact, but because the left‐hand side collapses:</p><p><br></p><p><img src=\"https://www.cliffsnotes.com/assets/19079.jpg\"></p><p><br></p><p><br></p><p>Therefore, equation (*) becomes</p><p><br></p><p>&nbsp;&nbsp;<img src=\"https://www.cliffsnotes.com/assets/19080.jpg\">&nbsp;</p>",
  notebook_id: math.id,
  user_id: julius.id,
  is_shortcut: true,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

fast_and_slow = Note.create!(
  title: "Thinking, Fast and Slow Review",
  body:  "<p><br></p><h3><a href=\"https://www.nytimes.com/pages/books/review/index.html\" target=\"_blank\" style=\"color: rgb(0, 0, 0);\">SUNDAY BOOK REVIEW</a></h3><h1>Two Brains Running</h1><p><strong>By JIM HOLT </strong>NOV. 25, 2011</p><p><br></p><p>In 2002, Daniel Kahneman won the Nobel in economic science. What made this unusual is that Kahneman is a psychologist. Specifically, he is one-half of a pair of psychologists who, beginning in the early 1970s, set out to dismantle an entity long dear to economic theorists: that arch-rational decision maker known as Homo economicus. The other half of the dismantling duo, Amos Tversky, died in 1996 at the age of 59. Had Tversky lived, he would certainly have shared the Nobel with Kahneman, his longtime collaborator and dear friend.</p><p><br></p><p><span style=\"color: rgb(51, 51, 51);\"><img src=\"https://static01.nyt.com/images/2011/11/27/books/review/HOLT-sub/HOLT-sub-popup.jpg\"></span></p><p><br></p><p>Human irrationality is Kahneman’s great theme. There are essentially three phases to his career. In the first, he and Tversky did a series of ingenious experiments that revealed twenty or so “cognitive biases” — unconscious errors of reasoning that distort our judgment of the world. Typical of these is the “anchoring effect”: our tendency to be influenced by irrelevant numbers that we happen to be exposed to. (In one experiment, for instance, experienced German judges were inclined to give a shoplifter a longer sentence if they had just rolled a pair of dice loaded to give a high number.) In the second phase, <strong><u>Kahneman and Tversky showed that people making decisions under uncertain conditions do not behave in the way that economic models have traditionally assumed; they do not “maximize utility</u></strong><u>.</u>” The two then developed an alternative account of decision making, one more faithful to human psychology, which they called “prospect theory.” (It was for this achievement that Kahneman was awarded the Nobel.) In the third phase of his career, mainly after the death of Tversky, Kahneman has delved into “hedonic psychology”: the science of happiness, its nature and its causes. His findings in this area have proved disquieting — and not just because one of the key experiments involved a deliberately prolonged colonoscopy.</p><p><br></p><p>“Thinking, Fast and Slow” spans all three of these phases. It is an astonishingly rich book: lucid, profound, full of intellectual surprises and self-help value. It is consistently entertaining and frequently touching, especially when Kahneman is recounting his collaboration with Tversky. <strong><u>(“The pleasure we found in working together made us exceptionally patient; it is much easier to strive for perfection when you are never bored.”) </u></strong>So impressive is its vision of flawed human reason that the New York Times columnist David Brooks recently declared that Kahneman and Tversky’s work “will be remembered hundreds of years from now,” and that it is “a crucial pivot point in the way we see ourselves.” They are, Brooks said, “like the Lewis and Clark of the mind.”</p><p>Now, this worries me a bit. A leitmotif of this book is overconfidence. All of us, and especially experts, are prone to an exaggerated sense of how well we understand the world — so Kahneman reminds us. Surely, he himself is alert to the perils of overconfidence. Despite all the cognitive biases, fallacies and illusions that he and Tversky (along with other researchers) purport to have discovered in the last few decades, he fights shy of the bold claim that humans are fundamentally irrational.</p><p><br></p><p>Or does he? “Most of us are healthy most of the time, and most of our judgments and actions are appropriate most of the time,” Kahneman writes in his introduction. Yet, just a few pages later, he observes that<strong><u> the work he did with Tversky “challenged” the idea, orthodox among social scientists in the 1970s, that “people are generally rational.”</u></strong> The two psychologists discovered “systematic errors in the thinking of normal people”: errors arising not from the corrupting effects of emotion, but built into our evolved cognitive machinery. Although Kahneman draws only modest policy implications (e.g., contracts should be stated in clearer language), others — perhaps overconfidently? — go much further. Brooks, for example, has argued that Kahneman and Tversky’s work illustrates “the limits of social policy”; in particular, the folly of government action to fight joblessness and turn the economy around.</p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

adam_grant = Note.create!(
  title: "Adam Grant Interview Transcript",
  body: "<p><img src=\"https://media.gq.com/photos/5aaaea7e5bce6d4cf87088b3/3:2/w_560/how-to-be-better-worker.gif\"></p><p><br></p><p><strong>GQ: I imagine this is going to be a bit like picking a favorite child, but of all the work you've done in organizational psychology, is there one particular insight or takeaway that sticks with you above everything else?</strong></p><p><br></p><p><em>Adam Grant</em>: That&nbsp;<em>is</em>&nbsp;like picking a favorite child. What separates the good from the great is the willingness to try new things. So often successful people and successful groups get stuck in a rut because they basically follow the same routines that have made them successful. If you're a sports team, that just makes you more predictable. If you're a company, it means you choose to stand still and make it easy either to miss major waves of change, or for other companies to disrupt you. And as an individual, it means you don't grow.</p><p><br></p><p>So I would love to see every individual, every group try at least one experiment every week. Whether that's shifting the structure of your meetings, or rotating around the leader for that decision—you can make a long list of what kind of experiments might be relevant. But to me, that's kind of the big lesson of organizational psychology: the people who are willing to try new things beat the ones who don't.</p><p><br></p><p><strong>What are some ways you would recommend to keep yourself in that spot of discomfort or uncertainty? Because, evolutionarily, I feel like we're wired to want to go to the thing that makes us comfortable.</strong></p><p><br></p><p>Totally. That was kind of my motivation for launching WorkLife. I felt like I had landed in a comfort zone where I'd been studying some of the same topics for years and I had a lot to say about them. It would have been very easy to stay in that wheelhouse and keep doing it, and I started to feel like I needed to go back out into the world and learn again, instead of teaching things I already knew.</p><p><br></p><p>Not everyone is going to go and start a podcast. But the generalizable takeaway from that is: we don't spend enough time learning about worlds that are different from our own. Even if it's just once a week, go out to lunch with somebody who's in a different industry and you ask them about how they operate, what they do, where they get their ideas, get to live a little bit vicariously from the way they work. That can be a great source of insight. In fact, there are a growing number of companies that give employees Lunch and Learn budgets. Where if you go to lunch with somebody outside of your organization and you go to learn and share some things that you've been working on, the company will pick up the tab. I would love to see more companies doing that.</p><p><br></p><p><strong>Let's talk about Ray Dalio's \"radical transparency\" policy at Bridgewater. When you first started talking about it on the podcast, you were saying our body has almost a negative biological reaction to criticism. Is that right?</strong></p><p><br></p><p>If you think about it from an evolutionary perspective, in our prehistoric days, when somebody criticized you, that was a life and death moment: if you got excluded from the tribe, you might not survive. You were totally dependent on this one group of people to make it. So I think part of the reason this is wired into our biology is people who just ignored criticism and social feedback, they didn't survive! They were not integrated into the group, they were the last person to get fed, no one wanted to marry them—they're not in good position to propagate their genes. Obviously, criticism today is rarely a sign that we're not going to survive. But we often have this physiological reaction that is rooted in: am I going to be excluded from this group? And that's a very, very bad thing.</p><p><br></p><p>I was asking Ray about the dynamic of not just people putting criticism of people out in the open, but [actually] videotaping or audiotaping every meeting. Do people feel like they're on stage and being judged constantly? And Ray said, well, it feels that way at first. But imagine it's like being on a reality TV show. Within a few hours, you forget that the cameras are there. Because nobody can be on all the time. You can't live your life constantly worried in every split second what everyone is thinking about you. And so I think there's a very natural adaptation that goes on. And he said that's the part you probably see on reality TV, where you watch—pick your favorite reality TV show—and you say, \"How in the world can people behave like this? How do they not realize they're on national TV?\"</p><h3><br></h3><p>The Bridgewater experience is very different. People get comfortable being evaluated and they then are much more willing to listen to the feedback. When it's an everyday part of your job, it's a lot like what when I was a diver: it feels like you're being coached. Can you imagine Serena Williams, when her coach says, \"Hey Serena, I think you should tighten your grip on the racket a little bit,\" her getting really defensive? Saying, \"No, I don't want to do that?\" She's like, I want to get better and I know this person is here to help me improve. I think that that's what they're trying to do at Bridgewater: get people to take feedback that way. You know that the person is trying to help you get better.</p>",
  notebook_id: misc.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

second_order = Note.create!(
  title: "Second Order Thinking",
  body: "<h1 class=\"ql-align-center\"><strong>Second-Order Thinking: What Smart People Use to Outperform</strong></h1><p class=\"ql-align-center\"><span style=\"color: rgb(178, 177, 177);\">READING TIME: 3 MINUTES</span></p><p class=\"ql-align-center\"><img src=\"https://aub5dj147f97c3ax-zippykid.netdna-ssl.com/wp-content/uploads/2016/04/second-order-white.jpg\" alt=\"Mental Model Second Order Thinking\" width=\"400\"></p><p>Sometimes when we solve one problem, we end up unintentionally creating another one that’s worse. Second-order thinking helps identify the second and subsequent order consequences of a decision before they happen. <strong><em>Knowing these problems before they occur allows us to take steps now to avoid problems later.</em></strong></p><p class=\"ql-align-center\"><br></p><p>Consider a country that, wanting to inspire regime change in another country, funds and provides weapons to a group of “moderate rebels.” Only it turns out that those moderate rebels will become powerful and then go to war with the sponsoring country for decades. Whoops.</p><p><br></p><blockquote>“Experience is what you got when you didn’t get what you wanted.” <em>—Randy Pausch</em></blockquote><p><br></p><p>The ability to think through problems to the second, third, and nth order—or what we will call second-order thinking for short—is a powerful tool that great thinkers use to their advantage all the time.</p><p class=\"ql-align-center\"><img src=\"https://aub5dj147f97c3ax-zippykid.netdna-ssl.com/wp-content/uploads/2016/04/second-order.png\" width=\"600\"></p>",
  notebook_id: thinking.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

bars = Note.create!(
  title: "WBW: Cool Bars",
  body: "<h1><strong>Why You Secretly Hate Cool Bars</strong></h1><p><span style=\"background-color: initial;\">May 27, 2014\t</span>By Tim Urban</p><p><br></p><p>In most cities around the world, bars are at the core of the social scene and go hand in hand with youth culture. Which is weird, because this is a diagram that exists:</p><p><br></p><p><a href=\"https://28oa9i1t08037ue3m1l0i861-wpengine.netdna-ssl.com/wp-content/uploads/2014/05/Venn5.png\" target=\"_blank\" style=\"color: rgb(77, 150, 198); background-color: initial;\"><img src=\"https://28oa9i1t08037ue3m1l0i861-wpengine.netdna-ssl.com/wp-content/uploads/2014/05/Venn5-600x335.png\" alt=\"The thing about cool bars\" height=\"335\" width=\"600\"></a></p><p><br></p><p>The word “bar” can refer to a variety of places—a handy rule is, the cooler the bar, the more horrible the life experience it will provide. And on a weekend night, the quintessential cool, super-popular, loud, dark city bar becomes a place of genuine hardship.</p><p><br></p><p>The problem begins because you have this idea in your head that a cool bar is a fun place to be. You think to yourself, “It’s time for a big weekend. Excited to hit the bars!” without what should be the follow-up thought, “Oh wait no, I remember now that weekend bars are terrible places to go to.”</p><p><br></p><p>After years of accidental suffering by billions of people, it’s about time we took a long, hard look at this voluntary practice and examine just what a night out at a popular bar entails.</p><p><br></p><p>Let’s start at the beginning:</p><p><br></p><p>It’s a Friday night, and you’re excited. You get yourself all ready—you look how you’re supposed to look, your friends look how they’re supposed to look, and you all head out to go where you’re supposed to go: the bar.</p><p><br></p><p>As you arrive, you come up to a familiar scene—</p><p><a href=\"https://28oa9i1t08037ue3m1l0i861-wpengine.netdna-ssl.com/wp-content/uploads/2014/05/Bar-line-no-rope3.png\" target=\"_blank\" style=\"color: rgb(77, 150, 198); background-color: initial;\"><img src=\"https://28oa9i1t08037ue3m1l0i861-wpengine.netdna-ssl.com/wp-content/uploads/2014/05/Bar-line-no-rope3-600x260.png\" alt=\"Bar line\" height=\"260\" width=\"600\"></a></p><p><br></p><p><br></p><p><strong style=\"background-color: initial;\">Activity 1) Getting a Drink</strong></p><p><br></p><p>After wedging your coat into a nook in the wall and saying goodbye to it for the last time, it’s time to go get your first drink. You were the first one of your friends to walk in the door, so you’re in the lead as your group works its way through the crowd, which means you’re the one who’s gonna drop the worst $54 a human can spend on a round of drinks no one will remember. But that’s the&nbsp;<em style=\"background-color: initial;\">end</em>&nbsp;goal—first, you need to figure out how to get through the three layers of people also trying to order drinks:</p>",
  notebook_id: funny.id,
  user_id: julius.id,
  is_shortcut: true,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

intro_to_ml = Note.create!(
  title: "Intro to Machine Learning",
  body: "<p><br></p><p><strong>Machine Learning</strong> is an idea to learn from examples and experience, without being explicitly programmed. Instead of writing code, you feed data to the generic algorithm, and it builds logic based on the data given.</p><p><br></p><p><img src=\"https://cdn-images-1.medium.com/max/2000/1*fp5BDiMUPn56qhIuCEO4QA.jpeg\"></p><p><br></p><p>For example, one kind of algorithm is a classification algorithm. It can put data into different groups. The classification algorithm used to detect handwritten alphabets could also be used to classify emails into spam and not-spam.</p><p><br></p><blockquote><em style=\"background-color: transparent;\">“A computer program is said to learn from experience E with some class of tasks T and performance measure P if its performance at tasks in T, as measured by P, improves with experience E.” -Tom M. Mitchell</em></blockquote><p><br></p><p><strong>Consider playing checkers.</strong></p><ul><li>E = the experience of playing many games of checkers</li><li>T = the task of playing checkers.</li><li>P = the probability that the program will win the next game.</li></ul><p><br></p><p><strong>Examples of Machine Learning</strong></p><p>There are many examples of machine learning. Here are a few examples of classification problems where the goal is to categorize objects into a fixed set of categories.</p><p><br></p><ul><li><strong>Face detection</strong>: Identify faces in images (or indicate if a face is present).</li><li><strong>Email filtering</strong>: Classify emails into spam and not-spam.</li><li><strong>Medical diagnosis</strong>: Diagnose a patient as a sufferer or non-sufferer of some disease.</li><li><strong>Weather prediction</strong>: Predict, for instance, whether or not it will rain tomorrow.</li></ul>",
  notebook_id: math.id,
  user_id: julius.id,
  is_shortcut: false,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)

farnam_street = Note.create!(
  title: "Mental Models",
  body: "<h1><strong>Mental Models: The Best Way to Make Intelligent Decisions (109 Models Explained)</strong></h1><p><img src=\"https://aub5dj147f97c3ax-zippykid.netdna-ssl.com/wp-content/uploads/2013/06/brain-white.jpg\" width=\"400\"></p><p>Mental models are how we understand the world. Not only do they shape what we think and how we understand but they shape the connections and opportunities that we see. Mental models are how we simplify complexity, why we consider some things more relevant than others, and how we reason.</p><p><br></p><p><span style=\"background-color: rgb(255, 255, 0);\">A mental model is simply a representation of how something works.</span> We cannot keep all of the details of the world in our brains, so we use models to simplify the complex into understandable and organizable chunks.</p><p><br></p><h2><strong>Thinking Better</strong></h2><p><br></p><p>The quality of our thinking is proportional to the models in our head and their usefulness in the situation at hand. The more models you have—the bigger your toolbox—the more likely you are to have the right models to see reality. It turns out that when it comes to improving your ability to make decisions</p><p>variety matters.</p><p><br></p><p>Most of us, however, are specialists. Instead of a latticework of mental models, we have a few from our discipline. Each specialist sees something different. By default, a typical Engineer will think in systems. A psychologist will think in terms of incentives. A biologist will think in terms of evolution. By putting these disciplines together in our head, we can walk around a problem in a three dimensional way. <span style=\"background-color: rgb(255, 255, 0);\">If we’re only looking at the problem one way, we’ve got a blind spot</span>. And blind spots can kill you.</p><p><br></p><p>Here’s another way to think about it. When a botanist looks at a forest they may focus on the ecosystem, an environmentalist sees the impact of climate change, a forestry engineer the state of the tree growth, a business person the value of the land. None are wrong, but neither are any of them able to describe the full scope of the forest. Sharing knowledge, or learning the basics of the other disciplines, would lead to a more well-rounded understanding that would allow for better initial decisions about managing the forest.</p><p><br></p><p>In a famous speech in the 1990s,&nbsp;<span style=\"color: rgb(204, 50, 50); background-color: transparent;\">Charlie Munger</span>&nbsp;summed up the approach to practical wisdom through understanding mental models by saying: “Well, the first rule is that you can’t really know anything if you just remember isolated facts and try and bang ’em back. If the facts don’t hang together on a latticework of theory, you don’t have them in a usable form. You’ve got to have models in your head. And you’ve got to array your experience both vicarious and direct on this latticework of models. You may have noticed students who just try to remember and pound back what is remembered. Well, they fail in school and in life. You’ve got to hang experience on a latticework of models in your head.”</p><p><img src=\"https://aub5dj147f97c3ax-zippykid.netdna-ssl.com/wp-content/uploads/2018/08/acquiring-wisdom-white.jpg\" alt=\"Mental Model Toolbox\" width=\"400\"></p><h2><strong>A Latticework of Mental Models</strong></h2><p><br></p><p>To help you build your latticework of mental models so you can&nbsp;make better decisions, we’ve collected and summarized the ones we’ve found the most useful. And remember: Building your latticework is a lifelong project. Stick with it, and you’ll find that your ability to <span style=\"background-color: rgb(255, 255, 0);\">understand reality, make consistently good decisions, and help those you love</span> will always be improving.</p>",
  notebook_id: thinking.id,
  user_id: julius.id,
  is_shortcut: true,
  is_trashed: false,
  cipher_key: 0,
  is_ciphered: false
)


##### Tags #####

blogs = Tag.create!(name: 'Blogs')

NoteTag.create!(note_id: farnam_street.id, tag_id: blogs.id)
NoteTag.create!(note_id: friendships.id, tag_id: blogs.id)
NoteTag.create!(note_id: paul_graham.id, tag_id: blogs.id)
NoteTag.create!(note_id: basecamp.id, tag_id: blogs.id)
NoteTag.create!(note_id: naval.id, tag_id: blogs.id)
NoteTag.create!(note_id: asinine.id, tag_id: blogs.id)
NoteTag.create!(note_id: bars.id, tag_id: blogs.id)
NoteTag.create!(note_id: buffett.id, tag_id: blogs.id)
NoteTag.create!(note_id: feynman.id, tag_id: blogs.id)
NoteTag.create!(note_id: second_order.id, tag_id: blogs.id)

mental_models = Tag.create!(name: 'Mental Models')

NoteTag.create!(note_id: farnam_street.id, tag_id: mental_models.id)
NoteTag.create!(note_id: naval.id, tag_id: mental_models.id)
NoteTag.create!(note_id: ggg.id, tag_id: mental_models.id)
NoteTag.create!(note_id: buffett.id, tag_id: mental_models.id)
NoteTag.create!(note_id: feynman.id, tag_id: mental_models.id)
NoteTag.create!(note_id: second_order.id, tag_id: mental_models.id)
NoteTag.create!(note_id: dual_processing.id, tag_id: mental_models.id)
NoteTag.create!(note_id: bayes.id, tag_id: mental_models.id)
NoteTag.create!(note_id: fast_and_slow.id, tag_id: mental_models.id)

psychology = Tag.create!(name: 'Psychology')

NoteTag.create!(note_id: farnam_street.id, tag_id: psychology.id)
NoteTag.create!(note_id: basecamp.id, tag_id: psychology.id)
NoteTag.create(note_id: naval.id, tag_id: psychology.id)
NoteTag.create(note_id: dual_processing.id, tag_id: psychology.id)
NoteTag.create(note_id: fast_and_slow.id, tag_id: psychology.id)
NoteTag.create(note_id: adam_grant.id, tag_id: psychology.id)

business = Tag.create!(name: 'Business')

NoteTag.create!(note_id: basecamp.id, tag_id: business.id)
NoteTag.create!(note_id: naval.id, tag_id: business.id)
NoteTag.create!(note_id: buffett.id, tag_id: business.id)
NoteTag.create!(note_id: second_order.id, tag_id: business.id)
NoteTag.create!(note_id: fast_and_slow.id, tag_id: business.id)
NoteTag.create!(note_id: adam_grant.id, tag_id: business.id)

writing = Tag.create!(name: 'Writing') 

NoteTag.create!(note_id: paul_graham.id, tag_id: writing.id)
NoteTag.create!(note_id: ggg.id, tag_id: writing.id)
NoteTag.create!(note_id: fast_and_slow.id, tag_id: writing.id)

philosophy = Tag.create!(name: 'Philosophy')

NoteTag.create!(note_id: paul_graham.id, tag_id: philosophy.id)

career = Tag.create!(name: 'Career')

NoteTag.create!(note_id: eightyhours.id, tag_id: career.id)
NoteTag.create!(note_id: buffett.id, tag_id: career.id)
NoteTag.create!(note_id: adam_grant.id, tag_id: career.id)

math = Tag.create!(name: 'Math')

NoteTag.create!(note_id: intro_to_ml.id, tag_id: math.id)
NoteTag.create!(note_id: linear_odes.id, tag_id: math.id)
NoteTag.create!(note_id: bayes.id, tag_id: math.id)
NoteTag.create!(note_id: wiles.id, tag_id: math.id)
NoteTag.create!(note_id: chaos.id, tag_id: math.id)

compsci = Tag.create!(name: 'CompSci')

NoteTag.create!(note_id: eightyhours.id, tag_id: compsci.id)
NoteTag.create!(note_id: bobby_tables.id, tag_id: compsci.id)
NoteTag.create!(note_id: intro_to_ml.id, tag_id: compsci.id)

funny_tag = Tag.create!(name: 'Funny')

NoteTag.create!(note_id: asinine.id, tag_id: funny_tag.id)
NoteTag.create!(note_id: bars.id, tag_id: funny_tag.id)

news = Tag.create!(name: 'News')

NoteTag.create!(note_id: nyt.id, tag_id: news.id)